<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Amount of time (in seconds) to post a requested raid embed." xml:space="preserve">
    <value>Amount of time (in seconds) to post a requested raid embed.</value>
  </data>
  <data name="Amount of times to hit DDOWN for accessing date/time settings during rollover correction. [Default: 39 Clicks]" xml:space="preserve">
    <value>Amount of times to hit DDOWN for accessing date/time settings during rollover correction. [Default: 39 Clicks]</value>
  </data>
  <data name="Choose the TeraType Icon set to use in the author area of the embed.  Icon1 are custom, Icon2 is not." xml:space="preserve">
    <value>Choose the TeraType Icon set to use in the author area of the embed.  Icon1 are custom, Icon2 is not.</value>
  </data>
  <data name="Enter the total number of raids to host before the bot automatically stops. Default is 0 to ignore this setting." xml:space="preserve">
    <value>Enter the total number of raids to host before the bot automatically stops. Default is 0 to ignore this setting.</value>
  </data>
  <data name="Lobby Options" xml:space="preserve">
    <value>Lobby Options</value>
  </data>
  <data name="Minimum amount of seconds to wait before starting a raid." xml:space="preserve">
    <value>Minimum amount of seconds to wait before starting a raid.</value>
  </data>
  <data name="Raids Started" xml:space="preserve">
    <value>Raids Started</value>
  </data>
  <data name="RotatingRaid Preset Filters" xml:space="preserve">
    <value>RotatingRaid Preset Filters</value>
  </data>
  <data name="RotatingRaidSV Settings" xml:space="preserve">
    <value>RotatingRaidSV Settings</value>
  </data>
  <data name="Set your Switch Date/Time format in the Date/Time settings. The day will automatically rollback by 1 if the Date changes." xml:space="preserve">
    <value>Set your Switch Date/Time format in the Date/Time settings. The day will automatically rollback by 1 if the Date changes.</value>
  </data>
  <data name="Time to scroll down duration in milliseconds for accessing date/time settings during rollover correction. You want to have it overshoot the Date/Time setting by 1, as it will click DUP after scrolling down. [Default: 930ms]" xml:space="preserve">
    <value>Time to scroll down duration in milliseconds for accessing date/time settings during rollover correction. You want to have it overshoot the Date/Time setting by 1, as it will click DUP after scrolling down. [Default: 930ms]</value>
  </data>
  <data name="Users NIDs here are banned raiders." xml:space="preserve">
    <value>Users NIDs here are banned raiders.</value>
  </data>
  <data name="When enabled, start the bot when you are on the HOME screen with the game closed. The bot will only run the rollover routine so you can try to configure accurate timing." xml:space="preserve">
    <value>When enabled, start the bot when you are on the HOME screen with the game closed. The bot will only run the rollover routine so you can try to configure accurate timing.</value>
  </data>
  <data name="When enabled, the bot will attempt take screenshots for the Raid Embeds. If you experience crashes often about \&quot;Size/Parameter\&quot; try setting this to false." xml:space="preserve">
    <value>When enabled, the bot will attempt take screenshots for the Raid Embeds. If you experience crashes often about \"Size/Parameter\" try setting this to false.</value>
  </data>
  <data name="When enabled, the bot will attempt to auto-generate your raids When enabled, the bot will attempt to auto-generate your raids from the \&quot;raidsv.txt\&quot; file on botstart." xml:space="preserve">
    <value>When enabled, the bot will attempt to auto-generate your raids When enabled, the bot will attempt to auto-generate your raids from the \"raidsv.txt\" file on botstart.</value>
  </data>
  <data name="When enabled, the bot will hide the raid code from the Discord embed." xml:space="preserve">
    <value>When enabled, the bot will hide the raid code from the Discord embed.</value>
  </data>
  <data name="When enabled, the bot will inject the current day seed to tomorrow's day seed." xml:space="preserve">
    <value>When enabled, the bot will inject the current day seed to tomorrow's day seed.</value>
  </data>
  <data name="When enabled, the bot will randomly pick a Raid to run, while keeping requests prioritized." xml:space="preserve">
    <value>When enabled, the bot will randomly pick a Raid to run, while keeping requests prioritized.</value>
  </data>
  <data name="When enabled, the bot will save your current ActiveRaids list to the \&quot;savedSeeds.txt\&quot; file on bot stop." xml:space="preserve">
    <value>When enabled, the bot will save your current ActiveRaids list to the \"savedSeeds.txt\" file on bot stop.</value>
  </data>
  <data name="When enabled, the bot will use the overshoot method to apply rollover correction, otherwise will use DDOWN clicks." xml:space="preserve">
    <value>When enabled, the bot will use the overshoot method to apply rollover correction, otherwise will use DDOWN clicks.</value>
  </data>
  <data name="When enabled, the counts will be emitted when a status check is requested." xml:space="preserve">
    <value>When enabled, the counts will be emitted when a status check is requested.</value>
  </data>
  <data name="When enabled, the embed will countdown the amount of seconds in \&quot;TimeToWait\&quot; until starting the raid." xml:space="preserve">
    <value>When enabled, the embed will countdown the amount of seconds in \"TimeToWait\" until starting the raid.</value>
  </data>
  <data name="When enabled, the screen will be turned off during normal bot loop operation to save power." xml:space="preserve">
    <value>When enabled, the screen will be turned off during normal bot loop operation to save power.</value>
  </data>
  <data name="When true, the embed will display current seed." xml:space="preserve">
    <value>When true, the embed will display current seed.</value>
  </data>
  <data name="Your Active Raid List lives here." xml:space="preserve">
    <value>Your Active Raid List lives here.</value>
  </data>
</root>