//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SysBot.Pokemon.WinForms.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SysBot.Pokemon.WinForms.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Amount of time (in seconds) to post a requested raid embed..
        /// </summary>
        internal static string Amount_of_time__in_seconds__to_post_a_requested_raid_embed_ {
            get {
                return ResourceManager.GetString("Amount of time (in seconds) to post a requested raid embed.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Amount of times to hit DDOWN for accessing date/time settings during rollover correction. [Default: 39 Clicks].
        /// </summary>
        internal static string Amount_of_times_to_hit_DDOWN_for_accessing_date_time_settings_during_rollover_correction___Default__39_Clicks_ {
            get {
                return ResourceManager.GetString("Amount of times to hit DDOWN for accessing date/time settings during rollover cor" +
                        "rection. [Default: 39 Clicks]", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose the TeraType Icon set to use in the author area of the embed.  Icon1 are custom, Icon2 is not..
        /// </summary>
        internal static string Choose_the_TeraType_Icon_set_to_use_in_the_author_area_of_the_embed___Icon1_are_custom__Icon2_is_not_ {
            get {
                return ResourceManager.GetString("Choose the TeraType Icon set to use in the author area of the embed.  Icon1 are c" +
                        "ustom, Icon2 is not.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the total number of raids to host before the bot automatically stops. Default is 0 to ignore this setting..
        /// </summary>
        internal static string Enter_the_total_number_of_raids_to_host_before_the_bot_automatically_stops__Default_is_0_to_ignore_this_setting_ {
            get {
                return ResourceManager.GetString("Enter the total number of raids to host before the bot automatically stops. Defau" +
                        "lt is 0 to ignore this setting.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lobby Options.
        /// </summary>
        internal static string Lobby_Options {
            get {
                return ResourceManager.GetString("Lobby Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimum amount of seconds to wait before starting a raid..
        /// </summary>
        internal static string Minimum_amount_of_seconds_to_wait_before_starting_a_raid_ {
            get {
                return ResourceManager.GetString("Minimum amount of seconds to wait before starting a raid.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Raids Started.
        /// </summary>
        internal static string Raids_Started {
            get {
                return ResourceManager.GetString("Raids Started", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RotatingRaid Preset Filters.
        /// </summary>
        internal static string RotatingRaid_Preset_Filters {
            get {
                return ResourceManager.GetString("RotatingRaid Preset Filters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RotatingRaidSV Settings.
        /// </summary>
        internal static string RotatingRaidSV_Settings {
            get {
                return ResourceManager.GetString("RotatingRaidSV Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set your Switch Date/Time format in the Date/Time settings. The day will automatically rollback by 1 if the Date changes..
        /// </summary>
        internal static string Set_your_Switch_Date_Time_format_in_the_Date_Time_settings__The_day_will_automatically_rollback_by_1_if_the_Date_changes_ {
            get {
                return ResourceManager.GetString("Set your Switch Date/Time format in the Date/Time settings. The day will automati" +
                        "cally rollback by 1 if the Date changes.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time to scroll down duration in milliseconds for accessing date/time settings during rollover correction. You want to have it overshoot the Date/Time setting by 1, as it will click DUP after scrolling down. [Default: 930ms].
        /// </summary>
        internal static string Time_to_scroll_down_duration_in_milliseconds_for_accessing_date_time_settings_during_rollover_correction__You_want_to_have_it_overshoot_the_Date_Time_setting_by_1__as_it_will_click_DUP_after_scrolling_down___Default__930ms_ {
            get {
                return ResourceManager.GetString("Time to scroll down duration in milliseconds for accessing date/time settings dur" +
                        "ing rollover correction. You want to have it overshoot the Date/Time setting by " +
                        "1, as it will click DUP after scrolling down. [Default: 930ms]", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Users NIDs here are banned raiders..
        /// </summary>
        internal static string Users_NIDs_here_are_banned_raiders_ {
            get {
                return ResourceManager.GetString("Users NIDs here are banned raiders.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, start the bot when you are on the HOME screen with the game closed. The bot will only run the rollover routine so you can try to configure accurate timing..
        /// </summary>
        internal static string When_enabled__start_the_bot_when_you_are_on_the_HOME_screen_with_the_game_closed__The_bot_will_only_run_the_rollover_routine_so_you_can_try_to_configure_accurate_timing_ {
            get {
                return ResourceManager.GetString("When enabled, start the bot when you are on the HOME screen with the game closed." +
                        " The bot will only run the rollover routine so you can try to configure accurate" +
                        " timing.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, the bot will attempt take screenshots for the Raid Embeds. If you experience crashes often about \&quot;Size/Parameter\&quot; try setting this to false..
        /// </summary>
        internal static string When_enabled__the_bot_will_attempt_take_screenshots_for_the_Raid_Embeds__If_you_experience_crashes_often_about___Size_Parameter___try_setting_this_to_false_ {
            get {
                return ResourceManager.GetString("When enabled, the bot will attempt take screenshots for the Raid Embeds. If you e" +
                        "xperience crashes often about \\\"Size/Parameter\\\" try setting this to false.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, the bot will attempt to auto-generate your raids When enabled, the bot will attempt to auto-generate your raids from the \&quot;raidsv.txt\&quot; file on botstart..
        /// </summary>
        internal static string When_enabled__the_bot_will_attempt_to_auto_generate_your_raids_When_enabled__the_bot_will_attempt_to_auto_generate_your_raids_from_the___raidsv_txt___file_on_botstart_ {
            get {
                return ResourceManager.GetString("When enabled, the bot will attempt to auto-generate your raids When enabled, the " +
                        "bot will attempt to auto-generate your raids from the \\\"raidsv.txt\\\" file on bot" +
                        "start.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, the bot will hide the raid code from the Discord embed..
        /// </summary>
        internal static string When_enabled__the_bot_will_hide_the_raid_code_from_the_Discord_embed_ {
            get {
                return ResourceManager.GetString("When enabled, the bot will hide the raid code from the Discord embed.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, the bot will inject the current day seed to tomorrow&apos;s day seed..
        /// </summary>
        internal static string When_enabled__the_bot_will_inject_the_current_day_seed_to_tomorrow_s_day_seed_ {
            get {
                return ResourceManager.GetString("When enabled, the bot will inject the current day seed to tomorrow\'s day seed.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, the bot will randomly pick a Raid to run, while keeping requests prioritized..
        /// </summary>
        internal static string When_enabled__the_bot_will_randomly_pick_a_Raid_to_run__while_keeping_requests_prioritized_ {
            get {
                return ResourceManager.GetString("When enabled, the bot will randomly pick a Raid to run, while keeping requests pr" +
                        "ioritized.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, the bot will save your current ActiveRaids list to the \&quot;savedSeeds.txt\&quot; file on bot stop..
        /// </summary>
        internal static string When_enabled__the_bot_will_save_your_current_ActiveRaids_list_to_the___savedSeeds_txt___file_on_bot_stop_ {
            get {
                return ResourceManager.GetString("When enabled, the bot will save your current ActiveRaids list to the \\\"savedSeeds" +
                        ".txt\\\" file on bot stop.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, the bot will use the overshoot method to apply rollover correction, otherwise will use DDOWN clicks..
        /// </summary>
        internal static string When_enabled__the_bot_will_use_the_overshoot_method_to_apply_rollover_correction__otherwise_will_use_DDOWN_clicks_ {
            get {
                return ResourceManager.GetString("When enabled, the bot will use the overshoot method to apply rollover correction," +
                        " otherwise will use DDOWN clicks.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, the counts will be emitted when a status check is requested..
        /// </summary>
        internal static string When_enabled__the_counts_will_be_emitted_when_a_status_check_is_requested_ {
            get {
                return ResourceManager.GetString("When enabled, the counts will be emitted when a status check is requested.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, the embed will countdown the amount of seconds in \&quot;TimeToWait\&quot; until starting the raid..
        /// </summary>
        internal static string When_enabled__the_embed_will_countdown_the_amount_of_seconds_in___TimeToWait___until_starting_the_raid_ {
            get {
                return ResourceManager.GetString("When enabled, the embed will countdown the amount of seconds in \\\"TimeToWait\\\" un" +
                        "til starting the raid.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, the screen will be turned off during normal bot loop operation to save power..
        /// </summary>
        internal static string When_enabled__the_screen_will_be_turned_off_during_normal_bot_loop_operation_to_save_power_ {
            get {
                return ResourceManager.GetString("When enabled, the screen will be turned off during normal bot loop operation to s" +
                        "ave power.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When true, the embed will display current seed..
        /// </summary>
        internal static string When_true__the_embed_will_display_current_seed_ {
            get {
                return ResourceManager.GetString("When true, the embed will display current seed.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your Active Raid List lives here..
        /// </summary>
        internal static string Your_Active_Raid_List_lives_here_ {
            get {
                return ResourceManager.GetString("Your Active Raid List lives here.", resourceCulture);
            }
        }
    }
}
